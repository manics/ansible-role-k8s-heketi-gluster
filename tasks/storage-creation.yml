---
- name: retrieve gluster-pod IPs
  command: >
    kubectl get pods
    --namespace=storage-heketi
    -o jsonpath='{.items[?(@.spec.containers[*].name=="glusterfs")].status.podIP}'
  register: get_ips

- name: set fact enpoint_list
  set_fact:
    enpoint_list: "[\"{{get_ips.stdout | replace(' ','\",\"')}}\"]"

- name: retrieve gluster-server nodenames
  command: >
    kubectl get pods
    --namespace=storage-heketi
    -o jsonpath='{.items[?(@.spec.containers[*].name=="glusterfs")].spec.nodeName}'
  register: get_nodenames

- name: set fact host_list
  set_fact:
    host_list: "[\"{{get_nodenames.stdout | replace(' ','\",\"')}}\"]"

- name: combine host-list with endpoint-list
  set_fact:
    combined_host_ip: "{{ combined_host_ip|default({})|combine({item.0: item.1}) }}"
  with_together:
    - "{{ host_list }}"
    - "{{ enpoint_list }}"
  register: combined_host_ip

- name: render topology
  template:
    src: topology.json
    dest: "~/.kubernetes-yaml/heketi/topology.json"

- name: retrieve heketi endpoint
  command: >
    kubectl get endpoints
    --namespace=storage-heketi
    -o jsonpath='{.items[?(@.metadata.name=="heketi")].subsets[*].addresses[*].ip}:{.items[?(@.metadata.name=="heketi")].subsets[*].ports[*].port}'
  register: get_heketi_endpoint

- name: set fact get_heketi_endpoint
  set_fact:
    heketi_endpoint: "{{ get_heketi_endpoint.stdout }}"

- name: apply topology-file to heketi
  command: >
    heketi-cli -s http://{{ heketi_endpoint }} topology load --json=$HOME/.kubernetes-yaml/heketi/topology.json

- name: set fact glusternode_count
  set_fact:
    glusterpod_count: "{{ (enpoint_list | length) | int }}"

# volumtype (replication factor): <VolumeDurability>:number eg. none:1, replicate:2, replicate:3 , disperse:???
# in jinja2 - means remove any whitespace before this bracket
- name: set fact volumetype
  set_fact:
    volumetype: "{% if (glusterpod_count | int) == 1 %}none:1
                 {%- elif (glusterpod_count | int) == 2 %}replicate:2
                 {%- else %}replicate:3{% endif %}"
  when: volumetype is undefined

- name: set fact gluster_volumeoptions
  set_fact:
    gluster_volumeoptions: "{{ gluster_volumeoptions | default("performance.stat-prefetch off quick-read off, read-ahead off, io-cache off, remote-dio on, quorum-type auto, server-quorum-type server") }}"

- name: render storage-class
  template:
    src: storage-class.yml
    dest: "~/.kubernetes-yaml/heketi/storage-class.yml"

- name: create storage-class
  command: >
    kubectl apply -f
    $HOME/.kubernetes-yaml/heketi/storage-class.yml
